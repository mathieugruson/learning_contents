https://www.gnu.org/software/make/manual/make.html#Reading

A simple makefile consists of “rules” with the following shape:

target … : prerequisites …
        recipe
        …
        …
A target is usually the name of a file that is generated by a program; examples of targets are executable or object files. A target can also be the name of an action to carry out, such as ‘clean’ (see Phony Targets).

A prerequisite is a file that is used as input to create the target. A target often depends on several files.

A recipe is an action that make carries out. A recipe may have more than one command, either on the same line or each on its own line

A header file is a file with extension .h which contains C function declarations and macro definitions to be shared between several source files.

cc command with -o option: This command will compile the source_file.c file, and create a executable output file with the specified name.
cc example.c -o examp_out

c command with -Wall option: This command will compile the source_file.c file, and check for all errors and warnings in the program.
cc example.c -Wall -o examp_out

cc command with -c option: This command will compile the source_file.c file, and create an object file source_file.o, which can later be linked to create an executable output file.
cc example.c -c 

